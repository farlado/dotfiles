# Farlado's GNU Emacs PKGBUILD -*- mode: sh -*-


################################################################################
#       CAVEAT LECTOR: This PKGBUILD uses heavily opinionated defaults!!       #
################################################################################


################################### FEATURES ###################################
# Assign "YES" to the variable you want enabled; empty or other value for NO.  #
# Where you read experimental, replace with foobar.                            #
################################################################################
CHECK=            # Run tests. May fail, this is developement after all.       #
CLANG=            # Use clang.                                                 #
LTO="YES"         # Enable link-time optimization. Seems fixed in GCC.         #
                  #                                                            #
CLI=              # CLI only binary.                                           #
GTK2=             # GTK2 support. Why would you?                               #
LUCID=            # Use the lucid, a.k.a athena, toolkit. Like XEmacs, sorta.  #
NOTKIT="YES"      # Use no toolkit widgets. Like B&W Twm (001d sk00l).         #
XWIDGETS=         # Use GTK+ widgets pulled from webkit2gtk. Requires GTK3.    #
                  #                                                            #
                  # Read https://wiki.archlinux.org/index.php/X_resources      #
                  # https://en.wikipedia.org/wiki/X_resources                  #
                  # and https://www.emacswiki.org/emacs/XftGnuEmacs            #
                  # for some tips on using outline fonts with                  #
                  # Xft, if you choose no toolkit or Lucid.                    #
                  #                                                            #
M17N=             # Enable m17n international table input support.             #
                  #                                                            #
                  # You are far better off using harfbuzz+freetype2            #
                  # But this gives independence if you need it.                #
                  # In fact, right now harfbuzz is hardwired, I have to        #
                  # be convinced it should be refactored.                      #
                  #                                                            #
CAIRO="YES"       # Enable support for Cairo.                                  #
                  #                                                            #
                  # GOOD NEWS! It is longer experimental and fully supported.  #
                  # Cairo is now, along with harfbuzz, the prefered font and   #
                  # text shaping engine. If using GTK+, you'll get printing    #
                  # for free.                                                  #
                  #                                                            #
DOCS_HTML=        # Generate and install html documentation.                   #
DOCS_PDF=         # Generate and install pdf documentation.                    #
                  #                                                            #
MAGICK=           # ImageMagick 7 support. Deprecated (read the logs).         #
                  #                                                            #
                  # ImageMagick, like flash, is a bug ridden pest that won't   #
                  # die; yet it is useful if you know what you are doing.      #
                  # -->>If you just *believe* you need this, you don't.<<--    #
                  #                                                            #
NOGZ="YES"        # Don't compress .el files.                                  #
################################################################################


############################# GENERAL PACKAGE INFO #############################
pkgname="emacs-git"
pkgver=28.0.50.140353
pkgrel=1
pkgdesc="GNU Emacs. Development master branch."
arch=('x86_64')
url="http://www.gnu.org/software/emacs/"
license=('GPL3')
depends=('gnutls' 'libxml2' 'jansson' 'libotf' 'harfbuzz' 'gpm')
makedepends=('git')
provides=('emacs' 'emacs-seq')
conflicts=('emacs' 'emacs26-git' 'emacs-27-git' 'emacs-seq')
replaces=('emacs26-git' 'emacs27-git' 'emacs-seq')
source=("emacs-git::git://git.savannah.gnu.org/emacs.git")
options=(!strip)
md5sums=('SKIP')
################################################################################


######################## FEATURE-DEPENDENT DEPENDENCIES ########################
if [[ $LTO == "YES" ]] && [[ $CLANG != "YES" ]]; then
  CFLAGS+=" -O2 -g -flto -fuse-linker-plugin"
  CXXFLAGS+=" -O2 -g -flto -fuse-linker-plugin"
else
  CFLAGS+=" -g -flto"
  CXXFLAGS+=" -g -flto"
fi

if [[ $CLANG == "YES" ]]; then
  export CC="/usr/bin/clang" ;
  export CXX="/usr/bin/clang++" ;
  export CPP="/usr/bin/clang -E" ;
  export LD="/usr/bin/lld" ;
  export AR="/usr/bin/llvm-ar" ;
  export AS="/usr/bin/llvm-as" ;
  export CCFLAGS+=' -fuse-ld=lld' ;
  export CXXFLAGS+=' -fuse-ld=lld' ;
  makedepends+=( 'clang' 'lld' 'llvm') ;
fi

# This calculates how many cores there are.
# This makes building faster!
if [[ "$(nproc)" ]]; then
   cores="-j$(nproc)";
fi

if [[ $NOTKIT == "YES" ]]; then
  depends+=( 'dbus'
             'lcms2'
             'librsvg'
             'libxrandr'
             'libxinerama'
             'hicolor-icon-theme' );
elif [[ $LUCID == "YES" ]]; then
  depends+=( 'dbus'
             'xaw3d'
             'lcms2'
             'librsvg'
             'xorgproto'
             'libxfixes'
             'libxinerama'
             'hicolor-icon-theme' );
  makedepends+=( 'xorgproto' );
elif [[ $GTK2 == "YES" ]]; then
  depends+=( 'gtk2' );
  makedepends+=( 'xorgproto' );
else
  depends+=( 'gtk3' );
  makedepends+=( 'xorgproto' );
fi

if [[ $M17N == "YES" ]]; then
  depends+=( 'm17n-lib' );
fi

if [[ $MAGICK == "YES" ]]; then
  depends+=( 'imagemagick' );
fi

if [[ ! $CLI == "YES" ]]; then
  depends+=( 'giflib' 'libjpeg-turbo' );
fi

if [[ $CAIRO == "YES" ]]; then
  depends+=( 'cairo' );
fi

if [[ $XWIDGETS == "YES" ]]; then
  if [[ $GTK2 == "YES" ]] || \
     [[ $LUCID == "YES" ]] || \
     [[ $NOTKIT == "YES" ]] || \
     [[ $CLI == "YES" ]]; then
    echo "";
    echo "";
    echo "Xwidgets support *requires* gtk+3!!!";
    echo "";
    echo "";
    exit 1;
  else
    depends+=( 'webkit2gtk' );
  fi
fi

if [[ $DOCS_PDF == "YES" ]]; then
  makedepends+=( 'texlive-core' );
fi
################################################################################


############################### PREPARE TO BUILD ###############################
pkgver() {
  cd "$srcdir/emacs-git"

  printf "%s.%s" \
    "$(grep AC_INIT configure.ac | \
    sed -e 's/^.\+\ \([0-9]\+\.[0-9]\+\.[0-9]\+\?\).\+$/\1/')" \
    "$(git rev-list --count HEAD)"
}

# There is no need to run autogen.sh after first checkout.
# Doing so, breaks incremental compilation.
prepare() {
  cd "$srcdir/emacs-git"
  [[ -x configure ]] || ( ./autogen.sh git && ./autogen.sh autoconf )
}

if [[ $CHECK == "YES" ]]; then
check() {
  cd "$srcdir/emacs-git"
  make check
}
fi

build() {
  cd "$srcdir/emacs-git"
################################################################################


########################### ASSIGN CONFIGURE OPTIONS ###########################
# Beware https://debbugs.gnu.org/cgi/bugreport.cgi?bug=25228                   #
# dconf and gconf break font settings you set in ~/.emacs. If you insist,      #
# you'll need to read that bug report in *full*. Good luck!                    #
################################################################################
local _conf=( --prefix=/usr --sysconfdir=/etc --libexecdir=/usr/lib
              --localstatedir=/var --mandir=/usr/share/man --with-wide-int
              --with-modules --without-gconf --without-gsettings )

if [[ $CLANG == "YES" ]]; then
  _conf+=( --enable-autodepend );
fi

if [[ $LTO == "YES" ]]; then
  _conf+=( --enable-link-time-optimization );
fi

if [[ $CLI == "YES" ]]; then
  _conf+=( --without-x --without-rsvg --without-lcms2 --with-x-toolkit=no );
elif [[ $NOTKIT == "YES" ]]; then
  _conf+=( --without-xaw3d --with-x-toolkit=no --without-toolkit-scroll-bars );
elif [[ $LUCID == "YES" ]]; then
  _conf+=( --with-x-toolkit=lucid --with-xaw3d );
elif [[ $GTK2 == "YES" ]]; then
  _conf+=( --with-x-toolkit=gtk2 --without-xaw3d );
else
  _conf+=( --with-x-toolkit=gtk3 --without-xaw3d );
fi

if [[ ! $M17N == "YES" ]]; then
  _conf+=( --without-m17n-flt );
fi

if [[ $MAGICK == "YES" ]]; then
  _conf+=( --with-imagemagick );
fi

if [[ $CAIRO == "YES" ]]; then
  _conf+=( --with-cairo );
fi

if [[ $XWIDGETS == "YES" ]]; then
  _conf+=( --with-xwidgets );
fi

if [[ $NOGZ == "YES" ]]; then
  _conf+=( --without-compress-install );
fi
################################################################################


############################ BUILD AND MAKE PACKAGE ############################
  # Use gold with gcc, unconditionally.
  #
  if [[ ! $CLANG == "YES" ]]; then
    export LD=/usr/bin/ld.gold
    export CFLAGS+=" -s -fuse-ld=gold";
    export CXXFLAGS+=" -s -fuse-ld=gold";
  fi

  ./configure "${_conf[@]}"

  # Using "make" instead of "make bootstrap" enables incremental
  # compiling. Less time recompiling. Yay! But you may
  # need to use bootstrap sometimes to unbreak the build.
  # Just add it to the command line.
  #
  # Please note that incremental compilation implies that you
  # are reusing your src directory!
  #
  make $cores

  # You may need to run this if 'loaddefs.el' files become corrupt.
  #cd "$srcdir/emacs-git/lisp"
  #make autoloads
  #cd ../

  # Optional documentation formats.
  if [[ $DOCS_HTML == "YES" ]]; then
    make html;
  fi
  if [[ $DOCS_PDF == "YES" ]]; then
    make pdf;
  fi
}

package() {
  cd "$srcdir/emacs-git"

  make DESTDIR="$pkgdir/" install

  # Install optional documentation formats
  if [[ $DOCS_HTML == "YES" ]]; then
      make DESTDIR="$pkgdir/" install-html;
  fi
  if [[ $DOCS_PDF == "YES" ]]; then
      make DESTDIR="$pkgdir/" install-pdf;
  fi

  # remove conflict with ctags package
  mv "$pkgdir"/usr/bin/{ctags,ctags.emacs}

  if [[ $NOGZ == "YES" ]]; then
    mv "$pkgdir"/usr/share/man/man1/{ctags.1,ctags.emacs.1};
  else
    mv "$pkgdir"/usr/share/man/man1/{ctags.1.gz,ctags.emacs.1.gz}
  fi

  # fix user/root permissions on usr/share files
  find "$pkgdir"/usr/share/emacs/ | xargs chown root:root

  # fix permssions on /var/games
  mkdir -p "$pkgdir"/var/games/emacs
  chmod 775 "$pkgdir"/var/games
  chmod 775 "$pkgdir"/var/games/emacs
  chown -R root:games "$pkgdir"/var/games
}
################################################################################
